HPCPorts
===========

This set of tools is "inspired" by the FreeBSD Ports and macports systems
and is intended to provide an easy way to install packages on High Performance 
Computing (HPC) systems.  The goal is to allow easy building of packages
with a consistent compiler toolchain and system-customized compile options.


Requirements
-------------

HPCPorts itself requires a full featured "make" (such as GNU make) and a
Bourne compatible shell.  It also assumes that you have serial compilers
for C, C++, F77, and F03.  The compiler toolchains supported are:
GCC, Darwin-GCC, Intel, and IBM (FIXME: test this last one).  Also, HPCPorts 
requires that you have the modules environment:

  http://modules.sourceforge.net/

as well as the "wget" command line tool.


Installation and Set-up
------------------------

You run HPCPorts directly from the git checkout.  The choices you need to make
are:

  1.  Where do you want to download sources to?  (the "HPCP_POOL" directory)
  2.  Where do you want to install packages to?  (the "HPCP_PREFIX" directory)
  3.  What is the config file called for this machine (the "HPCP_TARGET")

Create a file in the system directory called ${HPCP_TARGET}.make and export this
environment variable (export HPCP_TARGET=<machine name>).

Look at the "example.make" file in the examples directory and also the various
config files for other machines.  In fact a good starting point is to copy the
example file and adjust for your particular situation.

After the HPCP_POOL directory is set in your config and the HPCP_PREFIX path
is set (either in the system make snippet or in your shell environment), then 
you are ready to build packages.


Common Commands
-----------------

$> make help

    Displays usage information.

$> make status

    Show the current state of all packages.

$> make install

    Fetch, extract, configure, compile, and install all packages.

$> make purge

    Wipe all extracted sources and clean up working directories.


Other Commands
----------------

$> make uninstall

    Remove all current versions of the packages from the install prefix.

$> make clean

    Descend into all package directories and "make clean".

$> make fetch

    Download all package sources to the staging directory (HPCP_POOL) specified
    in the system/$HPCP_TARGET.make file for this system.


Per-Package Commands
----------------------

You can also have fine-grained control over the individual packages.  If you 
install an individual package, all dependencies will be installed first.

$> make <package>-install

    Fetch, extract, configure, compile, and install this package and
    all dependencies.

$> make <package>-purge

    Wipe extracted source and entire working directory.

$> make <package>-uninstall

    Remove the current version of the package from the install prefix.

$> make <package>-clean

    Descend into the package directory and run "make clean".

$> make <package>-fetch

    Download the package source to the staging directory (HPCP_POOL) specified
    in the system/$HPCP_TARGET.make file for this system.

