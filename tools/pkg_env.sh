
# This generates the shell snippet which exports the per-package
# environment variables, and also the module file.  Also generate
# the shell snippet sourced by configure and other targets that need
# dependency information.

PKG=$1
VER=$2
PREFIX=$4

# File headers

echo "# This file auto-generated by \"make extract\" " > ${PKG}.sh

echo '#%Module###<-magic cookie ####################################################
##' > ${PKG}.module
echo "##   ${PKG} " >> ${PKG}.module
echo '##   HPCPorts module file
##
##
# variables for Tcl script use only' >> ${PKG}.module
echo "set     version  ${VER}" >> ${PKG}.module
echo "set     prefix   ${PREFIX}/${PKG}-${VER}" >> ${PKG}.module
echo "" >> ${PKG}.module
echo "module-whatis \"Loads the HPCPorts version of ${PKG}\"" >> ${PKG}.module
echo "" >> ${PKG}.module

# Process package vars:

process_var () {
	var=$1
	shift
	shift
	vals=$@
	if [ ! "x${vals}" = "x" ]; then
		if [ "x${var}" = "xpath" ]; then
			for val in ${vals}; do
				echo "export PATH=${PREFIX}/${PKG}-${VER}/${val}:\$PATH" >> ${PKG}.sh
				echo "prepend-path PATH ${PREFIX}/${PKG}-${VER}/${val}" >> ${PKG}.module
			done
		else
			if [ "x${var}" = "xman" ]; then
				for val in ${vals}; do
					echo "export MANPATH=${PREFIX}/${PKG}-${VER}/${val}:\$MANPATH" >> ${PKG}.sh
					echo "prepend-path MANPATH ${PREFIX}/${PKG}-${VER}/${val}" >> ${PKG}.module
				done
			else
				if [ "x${var}" = "xheader" ]; then
					OUT=""
					for val in ${vals}; do
						OUT="${OUT}-I${PREFIX}/${PKG}-${VER}/${val} "
					done
					echo "export ${PKG}_CPPFLAGS=\"${OUT}\"" >> ${PKG}.sh
					echo "setenv ${PKG}_CPPFLAGS \"${OUT}\"" >> ${PKG}.module
				else
					if [ "x${var}" = "xld" ]; then
						OUT=""
						for val in ${vals}; do
							OUT="${OUT}${PREFIX}/${PKG}-${VER}/${val}:"
							echo "prepend-path LD_LIBRARY_PATH \"${PREFIX}/${PKG}-${VER}/${val}\"" >> ${PKG}.module
						done
						echo "export LD_LIBRARY_PATH=${OUT}\$LD_LIBRARY_PATH" >> ${PKG}.sh
					else
						if [ "x${var}" = "xlib_CC" ]; then
							echo "export ${PKG}_LIBS_CC=\"${vals}\"" >> ${PKG}.sh
							echo "setenv ${PKG}_LIBS_CC \"${vals}\"" >> ${PKG}.module
						else
							if [ "x${var}" = "xlib_CXX" ]; then
								echo "export ${PKG}_LIBS_CXX=\"${vals}\"" >> ${PKG}.sh
								echo "setenv ${PKG}_LIBS_CXX \"${vals}\"" >> ${PKG}.module
							else
								if [ "x${var}" = "xlib_F77" ]; then
									echo "export ${PKG}_LIBS_F77=\"${vals}\"" >> ${PKG}.sh
									echo "setenv ${PKG}_LIBS_F77 \"${vals}\"" >> ${PKG}.module
								else
									if [ "x${var}" = "xlib_FC" ]; then
										echo "export ${PKG}_LIBS_FC=\"${vals}\"" >> ${PKG}.sh
										echo "setenv ${PKG}_LIBS_FC \"${vals}\"" >> ${PKG}.module
									else
										echo "export ${PKG}_${var}=\"${vals}\"" >> ${PKG}.sh
										echo "setenv ${PKG}_${var} \"${vals}\"" >> ${PKG}.module
									fi
								fi
							fi
						fi
					fi
				fi
			fi
		fi
	fi
	return 0
}

cat ../vars | \
while read line; do
	process_var ${line}
done

echo "" >> ${PKG}.module

# module file boiler-plate

echo "proc ModulesHelp { } {" >> ${PKG}.module
echo "  global version" >> ${PKG}.module
echo "  puts stderr \"\\\t    ${PKG} - Version \$version\\\n\"" >> ${PKG}.module
echo "  puts stderr \"\\\t This module file was auto-generated for the ${PKG}\"" >> ${PKG}.module
echo "  puts stderr \"\\\t package as part of the HPCPorts installation system.\"" >> ${PKG}.module
echo "  puts stderr \"\\\t In general, this module may modify the PATH,\"" >> ${PKG}.module
echo "  puts stderr \"\\\t LD_LIBRARY_PATH, and MANPATH environment variables,\"" >> ${PKG}.module
echo "  puts stderr \"\\\t as well as setting any variables needed for compiling\"" >> ${PKG}.module
echo "  puts stderr \"\\\t and linking against libraries in this package.\"" >> ${PKG}.module
echo "  puts stderr \"\"" >> ${PKG}.module
echo "}" >> ${PKG}.module
echo "" >> ${PKG}.module
echo "conflict ${PKG}" >> ${PKG}.module
echo "" >> ${PKG}.module

# Handle dependencies

echo "# This file auto-generated by \"make extract\" " > dep_env.sh

deps=`head -n 1 ../deps`

for dep in ${deps}; do
	echo "source ${PREFIX}/env/${dep}.sh" >> dep_env.sh
	echo "if [ module-info mode load ] {" >> ${PKG}.module
	echo "	if [ is-loaded ${dep} ] {" >> ${PKG}.module
	echo "	} else {" >> ${PKG}.module
	echo "	  module load ${dep}" >> ${PKG}.module
	echo "	}" >> ${PKG}.module
	echo "}" >> ${PKG}.module
	echo "" >> ${PKG}.module
done

echo "" >> ${PKG}.module

# module file version

echo '#%Module###################################################################
####' > ${PKG}.version
echo "## version file for ${PKG}" >> ${PKG}.version
echo '##' >> ${PKG}.version
echo "set ModulesVersion      \"${VER}-hpcp\"" >> ${PKG}.version


